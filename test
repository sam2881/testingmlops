def generate_select_expressions(schema, parent_prefix="", parent_alias=""):
    """Generate select expressions based on the DataFrame schema with snake_case aliases."""
    expressions = []
    for field in schema.fields:
        full_field_name = f"{parent_prefix}{field.name}" if parent_prefix else field.name
        alias_name = camel_to_snake(field.name)
        if parent_alias:
            alias_name = f"{parent_alias}_{camel_to_snake(field.name)}"

        if isinstance(field.dataType, StructType):
            nested_expressions = generate_select_expressions(field.dataType, full_field_name + ".", alias_name)
            expressions.extend(nested_expressions)
        elif isinstance(field.dataType, ArrayType):
            element_type = field.dataType.elementType
            if isinstance(element_type, StructType):
                nested_expressions = generate_select_expressions(element_type, full_field_name + ".element.", alias_name)
                expressions.extend(nested_expressions)
            else:
                expressions.append(col(full_field_name).alias(alias_name))
        else:
            expressions.append(col(full_field_name).alias(alias_name))
    return expressions
