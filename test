def extract_column_paths(schema, parent_path=""):
    """
    Recursively extract column paths from a DataFrame schema.
    :param schema: StructType, the schema of the DataFrame.
    :param parent_path: str, the path prefix for nested structures.
    :return: list of full column paths.
    """
    column_paths = []
    for field in schema.fields:
        current_path = f"{parent_path}.{field.name}" if parent_path else field.name
        if isinstance(field.dataType, StructType):
            # Recursively call for StructType
            column_paths += extract_column_paths(field.dataType, current_path)
        elif isinstance(field.dataType, ArrayType) and isinstance(field.dataType.elementType, StructType):
            # Handle arrays of structs, assuming one level of nesting for simplicity
            column_paths += extract_column_paths(field.dataType.elementType, current_path)
        else:
            # Add the current path to the list
            column_paths.append(current_path)
    return column_paths
