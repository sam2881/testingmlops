def generate_select_expression(df):
    """Generate a DataFrame select expression with properly aliased columns."""
    column_names = df.schema.names  # Use schema.names to ensure we get the full path of nested columns
    seen_aliases = {}
    select_expr = []

    for col_name in column_names:
        parts = col_name.split('.')
        simple_name = parts[-1]  # Last part of the name
        snake_case_name = camel_to_snake(simple_name)

        # Handle duplicates by appending the parent's name in snake_case
        original_snake_case_name = snake_case_name
        count = 1
        while snake_case_name in seen_aliases:
            parent_name = parts[-2] if len(parts) > 1 else 'base'
            snake_case_name = camel_to_snake(parent_name) + '_' + original_snake_case_name
            # Increment suffix to handle more than one level of duplication
            count += 1

        seen_aliases[snake_case_name] = True
        select_expr.append(col("`" + col_name + "`").alias(snake_case_name))

    return df.select(*select_expr)
