def generate_select_expression(df):
    """Generate a DataFrame select expression with properly aliased columns."""
    seen_aliases = set()
    select_expr = []

    for col_name in df.columns:
        parts = col_name.split('.')
        last_part = parts[-1]  # Last part of the dot-separated name
        simple_name = last_part.split('_')[-1]  # Last part of the name after split by '_'
        snake_case_name = camel_to_snake(simple_name)
        
        # Handle duplicates by appending the parent's name in snake_case
        if snake_case_name in seen_aliases:
            if len(parts) > 1:
                parent_name = parts[-2]  # Use the second last part if available
                snake_case_name = camel_to_snake(parent_name) + '_' + snake_case_name
            else:
                # If there are no parts to derive a parent name, use "base" as a last resort
                snake_case_name = 'base_' + snake_case_name
        
        seen_aliases.add(snake_case_name)
        select_expr.append(col(".".join(parts)).alias(snake_case_name))

    return df.select(*select_expr)
