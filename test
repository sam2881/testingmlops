def extract_column_paths(schema, parent_path=""):
    """
    Recursively extract column paths from a DataFrame schema, including paths for non-struct elements within arrays.
    :param schema: StructType, the schema of the DataFrame.
    :param parent_path: str, the path prefix for nested structures.
    :return: list of full column paths.
    """
    column_paths = []
    for field in schema.fields:
        current_path = f"{parent_path}.{field.name}" if parent_path else field.name
        if isinstance(field.dataType, StructType):
            column_paths += extract_column_paths(field.dataType, current_path)
        elif isinstance(field.dataType, ArrayType):
            # Check if the array's elementType is a StructType to recurse
            if isinstance(field.dataType.elementType, StructType):
                column_paths += extract_column_paths(field.dataType.elementType, f"{current_path}.*")
            else:
                # Directly add the path for arrays of simple types
                column_paths.append(f"{current_path}.*")
        else:
            column_paths.append(current_path)
    return column_paths
