def generate_select_expression(df):
    """Generate a DataFrame select expression with properly aliased columns."""
    seen_aliases = set()
    select_expr = []

    for col_name in df.columns:
        parts = col_name.split('.')
        simple_name = parts[-1]  # Last part of the dot-separated name
        snake_case_name = camel_to_snake(simple_name)
        original_snake_case_name = snake_case_name

        # If there's a duplicate, add parent names until it's unique
        count = 1
        while snake_case_name in seen_aliases:
            if count == 1:
                parent_name = camel_to_snake(parts[-2]) if len(parts) > 1 else 'base'
                snake_case_name = parent_name + '_' + original_snake_case_name
            else:
                further_parent_name = camel_to_snake(parts[-count]) if len(parts) > count else 'base'
                snake_case_name = further_parent_name + '_' + snake_case_name
            count += 1

        seen_aliases.add(snake_case_name)
        select_expr.append(col(".".join(parts)).alias(snake_case_name))
        print(f"Column: {col_name} -> Alias: {snake_case_name}")  # Debugging output

    return df.select(*select_expr)
