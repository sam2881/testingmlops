def flatten_df(df, prefix=""):
    """
    Recursively flatten a DataFrame with complex nested structures (structs and arrays).
    """
    flat_cols = []
    complex_cols = []

    for field in df.schema.fields:
        name = field.name
        dtype = field.dataType
        flat_name = f"{prefix}.{name}" if prefix else name

        if isinstance(dtype, StructType):
            complex_cols += flatten_df(df.select(f"{flat_name}.*"), flat_name)
        elif isinstance(dtype, ArrayType) and isinstance(dtype.elementType, StructType):
            exploded_df = df.withColumn(name, explode_outer(col(name)))
            complex_cols += flatten_df(exploded_df, flat_name)
        else:
            flat_cols.append(col(flat_name).alias(flat_name.replace(".", "_")))

    return flat_cols + complex_cols
